name: contracts
listenTo: contracts
when:
  - beforeInsert
  - afterInsert
  - beforeUpdate
  - afterUpdate
isEnabled: true
handler: |-
  const { doc, previousDoc, isAfter, isBefore, isInsert, isUpdate } = ctx.params

  // beforeInsert
  if (isBefore && isInsert) {
      if (doc.cash_flow_type) {
          if (doc.cash_flow_type == 'receive') {
              doc.collection = true;
              doc.payment = false;
          } else if (doc.cash_flow_type == 'pay') {
              doc.collection = false;
              doc.payment = true;
          } else if (doc.cash_flow_type == 'receive_and_pay') {
              doc.collection = true;
              doc.payment = true;
          }
      }

      // 处理从审批中心到创建流程、同步到合同台账时，合同状态为变更
      doc.instance_state = '';
  }

  // afterInsert
  if (isAfter && isInsert) {
      if (doc.othercompany) {
          for (const item of doc.othercompany) {
              let this_account_bank_id = '';
              const othercompanyDoc = {
                  contracts: doc._id,
                  othercompany_name: item,
                  pk_bankdoc: this_account_bank_id,
                  owner: doc.owner,
                  space: doc.space,
                  created: new Date(),
                  modified: new Date(),
                  created_by: doc.owner,
                  modified_by: doc.owner,
                  company_id: doc.company_id,
                  company_ids: doc.company_ids
              };
              await ctx.broker.call(
                  'objectql.insert',
                  { 'objectName': 'contract_othercompany', 'doc': othercompanyDoc}
              )
          }
      }
  }

  // beforeUpdate
  if (isBefore && isUpdate) {
      if (doc.cash_flow_type) {
          if (doc.cash_flow_type == 'receive') {
              doc.collection = true;
              doc.payment = false;
          } else if (doc.cash_flow_type == 'pay') {
              doc.collection = false;
              doc.payment = true;
          } else if (doc.cash_flow_type == 'receive_and_pay') {
              doc.collection = true;
              doc.payment = true;
          }
      }
  }

  // afterUpdate
  if (isAfter && isUpdate) {
      //发起流程后，合同状态变更为审批中
      if (doc.instance_state == 'pending' && doc.instance_state != previousDoc.instance_state) {
          await ctx.broker.call('objectql.directUpdate',
              { 'objectName': 'contracts', 'id': doc._id, 'doc': { contract_fulfillment_state: 'approving' } }
          )
      }
      //审批通过后，状态变更为执行中
      if (doc.instance_state == 'approved' && doc.instance_state != previousDoc.instance_state) {
          await ctx.broker.call('objectql.directUpdate',
              { 'objectName': 'contracts', 'id': doc._id, 'doc': { contract_fulfillment_state: 'toperformthe' } }
          )
      }
      //审批不通过/取消申请，状态变更为已取消
      if ((doc.instance_state == 'rejected' || doc.instance_state == 'terminated') && doc.instance_state != previousDoc.instance_state) {
          await ctx.broker.call('objectql.directUpdate',
              { 'objectName': 'contracts', 'id': doc._id, 'doc': { contract_fulfillment_state: 'toperformthe' } }
          )
      }
  }
